generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String   @id @default(cuid())
  username                String   @unique
  passwordHash            String
  gender                  String   @default("other")
  partnerId               String?  @unique
  partner                 User?    @relation("UserPartner", fields: [partnerId], references: [id])
  partnerOf               User?    @relation("UserPartner")
  pairingCode             String?  @unique
  relationshipConfirmedAt DateTime?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  relationshipsOne Relationship[] @relation("UserOne")
  relationshipsTwo Relationship[] @relation("UserTwo")
}

model Relationship {
  id           String   @id @default(cuid())
  userOneId    String
  userTwoId    String?
  coupleNames  Json
  startedOn    DateTime
  milestones   Json
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  userOne User @relation("UserOne", fields: [userOneId], references: [id])
  userTwo User? @relation("UserTwo", fields: [userTwoId], references: [id])

  memories    Memory[]
  plans       Plan[]
  bucketItems BucketItem[]
  messages    Message[]
}

model Memory {
  id             String   @id @default(cuid())
  relationshipId String
  title          String
  description    String   @default("")
  photoUrl       String
  location       Json
  happenedOn     DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  relationship Relationship @relation(fields: [relationshipId], references: [id])
}

model Plan {
  id             String   @id @default(cuid())
  relationshipId String
  title          String
  description    String
  scheduledOn    DateTime
  attachments    Json
  status         String   @default("upcoming")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  relationship Relationship @relation(fields: [relationshipId], references: [id])
}

model BucketItem {
  id             String   @id @default(cuid())
  relationshipId String
  position       Int
  title          String
  completed      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  relationship Relationship @relation(fields: [relationshipId], references: [id])

  @@unique([relationshipId, position])
}

model Message {
  id             String   @id @default(cuid())
  relationshipId String
  author         String
  content        String
  createdAt      DateTime @default(now())

  relationship Relationship @relation(fields: [relationshipId], references: [id])
}
