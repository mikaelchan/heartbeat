version: '3.9'

services:
  mongo1:
    image: mongo:6.0
    container_name: mongo1
    restart: unless-stopped
    ports:
      - "27017:27017"
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo1-data:/data/db
    networks:
      - mongo-cluster

  mongo2:
    image: mongo:6.0
    container_name: mongo2
    restart: unless-stopped
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo2-data:/data/db
    networks:
      - mongo-cluster

  mongo3:
    image: mongo:6.0
    container_name: mongo3
    restart: unless-stopped
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo3-data:/data/db
    networks:
      - mongo-cluster

  mongo-setup:
    image: mongo:6.0
    container_name: mongo-setup
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: ["sh", "-c"]
    command: >-
      until mongosh --host mongo1 --username root --password example --authenticationDatabase admin --quiet --eval "db.runCommand({ ping: 1 })"; do sleep 1; done;
      mongosh --host mongo1 --username root --password example --authenticationDatabase admin --quiet --eval '
        const config = {
          _id: "rs0",
          members: [
            { _id: 0, host: "mongo1:27017" },
            { _id: 1, host: "mongo2:27017" },
            { _id: 2, host: "mongo3:27017" }
          ]
        };
        try {
          rs.initiate(config);
        } catch (error) {
          if (!/already initialized/i.test(error.toString())) {
            throw error;
          }
        }
        let primaryReady = false;
        while (!primaryReady) {
          try {
            primaryReady = rs.status().myState === 1;
          } catch (statusError) {
            primaryReady = false;
          }
          if (!primaryReady) {
            sleep(1000);
          }
        }
      '
    networks:
      - mongo-cluster

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:

networks:
  mongo-cluster:
    driver: bridge
